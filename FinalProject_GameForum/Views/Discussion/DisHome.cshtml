@model FinalProject_GameForum.Models.Discussion

<link rel="stylesheet" href="~/css/Discussion/DisHome.css" asp-append-version="true" />
@{
	Layout = "~/Views/Shared/_LayoutDis2.cshtml";
}
<div id="main-content">
	<div class="dis-container">
		<img src="~/img/@(Model.ImageUrl ?? "default.jpg")" />
		<h3>@Model.DiscussionName</h3>
		<h4>@Model.DiscussionDescription</h4>

		<br />

		<h3>熱門文章</h3>
		<div class="hot-dis">
			<ul>
				@if (ViewBag.HotArticles != null)
				{
					foreach (var hot in ViewBag.HotArticles)
					{
						<li>
							<h5>【@hot.Category】@hot.ArticleTitle</h5>
							<h6>
								...<a href="@Url.Action("Index", "Article", new { id = hot.ArticleGroupId })">繼續閱讀</a>
							</h6>
						</li>
					}
				}
				else
				{
					<li>暫時沒有熱門文章哦～</li>
				}
			</ul>
		</div>


		<h3>公告</h3>
		<h4>
			歡迎來到 @Model.DiscussionName 哈拉板<br />
			這裡是討論 @Model.DiscussionName 相關內容的專屬空間！
		</h4>
	</div>
</div>

<!-- 文章列表頁面 -->
<div id="article-list-container" style="display: none;">
	<div class="container mt-3">

		<!-- 分頁和分類按鈕容器 -->
		<div class="d-flex justify-content-between align-items-center mt-3">
			<!-- 分類按鈕 -->
			<div>
				<button class="btn btn-primary me-2 category-btn" data-category="">全部</button>
				<button class="btn btn-outline-primary me-2 category-btn" data-category="情報">情報</button>
				<button class="btn btn-outline-primary me-2 category-btn" data-category="攻略">攻略</button>
				<button class="btn btn-outline-primary me-2 category-btn" data-category="討論">討論</button>
				<button class="btn btn-outline-primary me-2 category-btn" data-category="心情">心情</button>
				<button class="btn btn-outline-primary category-btn" data-category="問題">問題</button>
			</div>

			<!-- 分頁按鈕 -->
			<div id="pagination-container">
				<button id="prevPageBtn" class="btn btn-outline-secondary">« 上一頁</button>
				<span id="pageNumbers"></span>
				<button id="nextPageBtn" class="btn btn-outline-secondary">下一頁 »</button>
			</div>
		</div>

		<!-- 文章列表 -->
		<div id="articleList"></div>

		<!-- 右側聊天室 -->
		<div class="chatroom position-fixed end-0 top-50 translate-middle-y bg-white p-3">
			<h5 class="text-center"><strong>聊天室</strong></h5>

			<div id="chatRoom" class="chat-container">
				<div id="chatMessages" class="chat-messages"></div>

				<div class="chat-input">
					<input type="text" id="messageInput" placeholder="輸入訊息..." />
					<button id="sendButton">發送</button>
				</div>
			</div>
		</div>

		<!-- 聊天室 JS（SignalR.Hub、卷軸）-->
		<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
		<script>
			var connection = new signalR.HubConnectionBuilder()
				.withUrl("/Discussion/chatHub")
				.build();

			connection.start().catch(err => console.error(err.toString()));

			document.getElementById("sendButton").addEventListener("click", function () {
				sendMessage();
			});

			document.getElementById("messageInput").addEventListener("keydown", function (event) {
				if (event.key === 'Enter') {
					event.preventDefault();
					sendMessage();
				}
			});

			function sendMessage() {
				var message = document.getElementById("messageInput").value;
				if (message.trim() !== "") {
					connection.invoke("SendMessage", message).catch(err => console.error(err.toString()));
					document.getElementById("messageInput").value = "";
				}
			}

			// 滾動到底部的函式
			function scrollToBottom() {
				let chatMessages = document.getElementById("chatMessages");
				chatMessages.scrollTop = chatMessages.scrollHeight;
			}

			// 當訊息被發送時，自動滾動到底部
			document.getElementById("sendButton").addEventListener("click", function () {
				setTimeout(scrollToBottom, 100); // 稍微延遲，確保訊息已經插入
			});

			// 如果是用 Enter 發送訊息，也觸發滾動
			document.getElementById("messageInput").addEventListener("keypress", function (event) {
				if (event.key === "Enter") {
					event.preventDefault(); // 防止換行
					document.getElementById("sendButton").click(); // 模擬點擊發送按鈕
					setTimeout(scrollToBottom, 100);
				}
			});

			// 當聊天室載入時，自動滾到底部
			document.addEventListener("DOMContentLoaded", scrollToBottom);

			// 當訊息接收時，自動滾動到底部
			connection.on("ReceiveMessage", function (user, message) {
				var chatBox = document.getElementById("chatMessages");
				var newMessage = document.createElement("div");
				newMessage.innerHTML = user + "：" + convertLinksToAnchors(message); // 使用 convertLinksToAnchors 格式化訊息
				chatBox.appendChild(newMessage);

				// 收到訊息後自動滾動到底部
				scrollToBottom();
			});

			// 將訊息中的 URL 轉換為超連結
			function convertLinksToAnchors(message) {
				var urlRegex = /(https?:\/\/[^\s]+)/g; // 正則表達式匹配 URL
				return message.replace(urlRegex, function(url) {
					return `<a href="${url}" target="_blank">${url}</a>`; // 將 URL 轉換為超連結
				});
			}
		</script>

	</div>
</div>

<!-- JavaScript 控制切換 -->
<script>
		document.addEventListener("DOMContentLoaded", function () {
		let discussionId = @Model.DiscussionId;
		let articleListContainer = document.getElementById("article-list-container");
		let mainContent = document.getElementById("main-content");

		let currentPage = 1; // 目前頁碼
		let totalPages = 1;  // 總頁數
		let activeCategory = ""; // 存儲目前的篩選條件

		// 監聽文章列表按鈕
		document.getElementById("article-list-btn").addEventListener("click", function (event) {
			event.preventDefault();
			mainContent.style.display = "none";
			articleListContainer.style.display = "block";
			currentPage = 1; // 重置頁碼
			loadArticleList(activeCategory, currentPage);
		});

		// 監聽分類按鈕點擊
		document.querySelectorAll(".category-btn").forEach(button => {
			button.addEventListener("click", function () {
				activeCategory = this.getAttribute("data-category"); // 存起來
				// 更新按鈕樣式，確保只有當前按鈕是 btn-primary
				document.querySelectorAll(".category-btn").forEach(b => {
					b.classList.remove("btn-primary");
					b.classList.add("btn-outline-primary");
				});
				this.classList.remove("btn-outline-primary");
				this.classList.add("btn-primary");

				currentPage = 1; // 切換分類時重置頁碼
				loadArticleList(activeCategory, currentPage);
			});
		});

		// 載入文章列表（含分類與分頁）
		function loadArticleList(category, page) {
			fetch(`/Discussion/LoadArticleList?discussionId=${discussionId}&category=${category}&page=${page}`)
				.then(response => response.text())
				.then(html => {
					document.getElementById("articleList").innerHTML = html;
					updatePaginationButtons();
				})
				.catch(error => console.error("載入文章列表失敗:", error));
		}

		// 分頁按鈕事件
		document.getElementById("prevPageBtn").addEventListener("click", function () {
			if (currentPage > 1) {
				currentPage--;
				loadArticleList(activeCategory, currentPage);
			}
		});
		document.getElementById("nextPageBtn").addEventListener("click", function () {
			if (currentPage < totalPages) {
				currentPage++;
				loadArticleList(activeCategory, currentPage);
			}
		});

		// 更新分頁按鈕狀態與產生中間頁碼超連結
		function updatePaginationButtons() {
			// 從 _ArticleList 中的 articles-container 讀取 data-total-pages
			let articlesContainer = document.getElementById("articles-container");
			totalPages = parseInt(articlesContainer.getAttribute("data-total-pages")) || 1;
			document.getElementById("prevPageBtn").disabled = (currentPage <= 1);
			document.getElementById("nextPageBtn").disabled = (currentPage >= totalPages);

			// 產生中間頁碼的超連結
			let pageNumbersContainer = document.getElementById("pageNumbers");
			pageNumbersContainer.innerHTML = ""; // 先清空內容

			for (let i = 1; i <= totalPages; i++) {
				let pageLink = document.createElement("a");
				pageLink.href = "#";
				pageLink.textContent = i;
				pageLink.style.margin = "0 5px";
				if (i === currentPage) {
					pageLink.style.fontWeight = "bold";
					pageLink.style.textDecoration = "underline";
				}
				pageLink.addEventListener("click", function (e) {
					e.preventDefault();
					currentPage = i;
					loadArticleList(activeCategory, currentPage);
				});
				pageNumbersContainer.appendChild(pageLink);
			}
		}
	});
</script>





